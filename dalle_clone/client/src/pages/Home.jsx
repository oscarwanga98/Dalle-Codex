import React from 'react'
import { useState,useEffect} from 'react'
import {Loader,Card,FormField} from '../components'

const RenderCards =({data,title})=>{
  if(data?.length>0){
      return data.map((post)=><Card key={post._id} {...post}/>)
   }
  return (
  <h2 className='mt-5 font-bold text-[#6449ff] text-xl uppercase'>
    {title}
  </h2>
  )
}


function Home() {
  const [loading,setLoading]=useState(false);
  const [allPosts,setAllPosts]=useState(null);
  
  const [searchText,setsearchText]=useState('')
  const [searchedResults,setSearchedResults]=useState(null)
  const [searchTimeout,setSearchTimeout]=useState(null)

  useEffect(()=>{
    const fetchPost= async()=>{
      setLoading(true)
      try {
        const response =await fetch('http://localhost:8080/api/v1/post',{
          method:'GET',
          headers:{
            'Content-type':'application/json'
          }
        })
        if (response.ok){
          const result= await response.json()
          setAllPosts(result.data.reverse())
          // console.log(allPosts)
        }
      } catch (error) {
        alert(error)
      }finally{
        setLoading(false)
      }
    }
    fetchPost()
  },[]) 

  const handleSearch=(e)=>{
    clearTimeout(setSearchTimeout)
    setsearchText(e.target.value)

    setSearchTimeout(
        setTimeout(()=>{
          const searchResults=allPosts.filter((item)=>item.name.toLowerCase().includes(searchText.toLowerCase())||item.prompt.toLowerCase().includes(searchText.toLocaleLowerCase()))
          setSearchResults(searchResults)
        },500)
      )
  }
  return (
    <section className='max-w-7x1 mx-auto'>
      <div>
        <h1 className='font-extrabold text-[#222328] text-[32px] '>The Community Showcase</h1>
        <p className='mt-2 tetxt-[#666e75] text-[16px] max-w[500px]'>Browse through the collection of imaginative and visually stunning images generated by DALLE AI</p>
      </div>

      <div className='mt-16'>
        <FormField
          labelName='Search Posts'
          type='text'
          name='tetx'
          placeholder='Search posts '/>
      </div>

      <div className='mt-10'>
        {loading?(<div className='flex justify-center items-center'>
          <Loader/>
        </div>):(<>
                  {searchText && (<h2 className='font-medium tetx-[#666e75] text-xl mb-3'>
                    Show results for <span className='text-[#222328]'>{searchText}</span>
                  </h2>)}
                 </>)}
                 <div className='grid lg:grid-cols-4 smgrid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3'>
                    {searchText ?(
                      <RenderCards 
                        data={searchedResults}
                        title='No Search results found'
                        />
                    ):(
                      <RenderCards
                        data={allPosts}
                        title='No Posts Found '

                      />
                    )}
                </div>
      </div>

    </section>
  )
}

export default Home